 select * from subscriptions 
 limit 2;
 select min(subscription_start), max(subscription_end) from subscriptions;
 
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status AS 
(
SELECT cross_join.id, cross_join.first_day as month,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR subscription_end IS NULL)
AND (segment = 87)
THEN 1
ELSE 0
END AS is_active_87,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR subscription_end IS NULL)
AND (segment = 30)
THEN 1
ELSE 0
END AS is_active_30,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 87)
THEN 1
ELSE 0
END as is_canceled_87,
CASE
WHEN (subscription_end between first_day AND last_day)
AND (segment = 30)
THEN 1
ELSE 0
END as is_canceled_30
FROM cross_join),

status_aggregate AS (
SELECT
month,
SUM(is_active_87) AS sum_active_87,
SUM(is_active_30) AS sum_active_30,
SUM(is_canceled_87) AS sum_canceled_87,
SUM(is_canceled_30) AS sum_canceled_30
FROM status
GROUP BY month
)
select (1.0* sum(sum_canceled_87)/ sum(sum_active_87)) as churn_87,  (1.0* sum(sum_canceled_30)/ sum(sum_active_30)) as churn_30 from status_aggregate;
