WITH 
months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join as 
(select * from subscriptions
cross join months
)
SELECT *
FROM cross_join
LIMIT 100;
-- we het an temporary table with all the possibilities of combinations of enrolments

-- further

WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status as (
select cross_join.id, cross_join.first_day as month,
case
when subscription_start < cross_join.first_day
AND ((subscription_end >= cross_join.first_day)
OR (subscription_end IS NULL)
) THEN 1
else 0
end as is_active
from cross_join
)
SELECT *
FROM status
LIMIT 100;

-- now its easy to analyse data as required
